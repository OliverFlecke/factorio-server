name: Build and publish image

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'

env:
  CONTAINER_REGISTRY: ghcr.io
  IMAGE_NAME: factorio-server

jobs:
  get-versions: 
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt-get install curl jq
      - id: set-matrix
        run: |
          VERSIONS=$(curl -L https://www.factorio.com/api/latest-releases | jq -r ".stable.headless, .experimental.headless")
          echo $VERSIONS
          echo "matrix=[\"stable:$(echo $VERSIONS | cut -d ' ' -f 1 | tr -d '\n')\", \"experimental:$(echo $VERSIONS | cut -d ' ' -f 2 | tr -d '\n')\"]" >> $GITHUB_OUTPUT
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  build-and-publish-image:
    name: Build and publish image
    needs: get-versions
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: [amd64]
        version: ${{ fromJson(needs.get-versions.outputs.matrix) }}

    steps:
      - run: echo ${{ matrix.platform}} / ${{ matrix.version }}
      - id: get-version
        run: echo "VERSION=$(echo ${{ matrix.version }} | cut -d ':' -f 2)" >> $GITHUB_OUTPUT
      - id: get-tag
        run: echo "TAG=$(echo ${{ matrix.version }} | cut -d ':' -f 1)" >> $GITHUB_OUTPUT

      - name: Set lower case owner name
        run: echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - uses: docker/setup-buildx-action@v1
      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ${{ env.CONTAINER_REGISTRY }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.CONTAINER_REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=long
            type=raw,value=latest,enable={{ is_default_branch && steps.get-tag.outputs.TAG == 'experimental' }}
            type=raw,value=${{ steps.get-version.outputs.VERSION }}
            type=raw,value=${{ steps.get-tag.outputs.TAG }}

      - name: Build image
        id: build-image
        uses: docker/build-push-action@v4
        with:
          platforms: linux/${{ matrix.platform }}
          push: true
          cache-from: type=registry,ref=${{ env.CONTAINER_REGISTRY }}/${{ env.OWNER_LC }}/${{ env.IMAGE_NAME }}:buildcache-${{ matrix.platform }}
          cache-to: type=registry,ref=${{ env.CONTAINER_REGISTRY }}/${{ env.OWNER_LC }}/${{ env.IMAGE_NAME }}:buildcache-${{ matrix.platform }},mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        env:
          VERSION: ${{ steps.get-version.outputs.VERSION }}
